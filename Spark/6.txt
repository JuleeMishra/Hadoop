Exercise 06 - Get details of top 5 customers by revenue for each month
		Tables should be in hive database - <YOUR_USER_ID>_retail_db_txt
		orders
		order_items
		customers
		Time to create database and tables need not be counted. Make sure to go back to Spark SQL module and create tables and load data
		Get details of top 5 customers by revenue for each month
		We need to get all the details of the customer along with month and revenue per month
		Data need to be sorted by month in ascending order and revenue per month in descending order
		Create table top5_customers_per_month in <YOUR_USER_ID>_retail_db_txt
		Insert the output into the newly created table
		
Solution:	
		val orders=sc.textFile("/user/Julee/test/orders")
		val ordersDF=orders.map(rec=(rec.split(",")(0).toInt,rec.split(",")(1).toString,rec.split(",")(2).toInt,rec.split(",")(3).toString)).toDF(“order_id”,“order_date”,“order_customer_id”,“order_status”)
		ordersDF.registerTempTable(“orders1”)
		val orderItems=sc.textFile("/user/Julee/test/order_items")
		val orderItemsDF=orderItems.map(rec=>(rec.split(",")(0).toInt,rec.split(",")(1).toInt,rec.split(",")(2).toInt,rec.split(",")(3).toInt,rec.split(",")(4).toFloat,rec.split(",")(5).toFloat)).toDF(“order_item_id”,“order_item_order_id”,“order_item_product_id”,“order_item_quantity”,“order_item_subtotal”,“order_item_product_price”)
		orderItemsDF.registerTempTable(“orderItems1”)
		val customers=sc.textFile("/user/Julee/test/customers")
		val customersDF=customers.map(rec=>(rec.split(",")(0).toInt,rec.split(",")(1).toString,rec.split(",")(2).toString,rec.split(",")(3).toString,rec.split(",")(4).toString,rec.split(",")(5).toString,rec.split(",")(6).toString,rec.split(",")(7).toString)).toDF(“customer_id”,“customer_fname”,“customer_lname”,“customer_email”,“customer_password”,“customer_street”,“customer_city”,“customer_state”,“customer_zipcode”)

		customersDF.registerTempTable("customers1")
		sqlContext.sql("select * from(select customer_id,customer_fname,customer_lname,customer_email,customer_password,customer_street,customer_city,customer_state,customer_zipcode,month,total_amount_per_month,dense_rank() over (partition by month order by total_amount_per_month desc) as rnk from (select distinct * from(select c.customer_id,c.customer_fname,c.customer_lname,c.customer_email,c.customer_password,c.customer_street,c.customer_city,c.customer_state,c.customer_zipcode,substr(o.order_date,1,7) month,sum(order_item_subtotal) total_amount_per_month from customers1 c join orders1 o on o.order_customer_id=c.customer_id join orderItems1 oi on o.order_id=oi.order_item_order_id group by c.customer_id,c.customer_id,customer_fname,customer_lname,customer_email,customer_password,customer_street,customer_city,customer_state,customer_zipcode,substr(o.order_date,1,7))q)p)e where rnk <=5 order by month,total_amount_per_month desc").show


